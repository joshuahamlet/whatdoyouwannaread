[{"/home/joshua/Desktop/whatdoyouwannaread/src/index.js":"1","/home/joshua/Desktop/whatdoyouwannaread/src/App.js":"2","/home/joshua/Desktop/whatdoyouwannaread/src/reportWebVitals.js":"3","/home/joshua/Desktop/whatdoyouwannaread/src/graphql/client.js":"4","/home/joshua/Desktop/whatdoyouwannaread/src/components/Navbar.js":"5","/home/joshua/Desktop/whatdoyouwannaread/src/components/Matches.js":"6","/home/joshua/Desktop/whatdoyouwannaread/src/components/SwipeDeck.js":"7","/home/joshua/Desktop/whatdoyouwannaread/src/components/Login.js":"8","/home/joshua/Desktop/whatdoyouwannaread/src/contexts/authContext.js":"9","/home/joshua/Desktop/whatdoyouwannaread/src/graphql/cache.js":"10","/home/joshua/Desktop/whatdoyouwannaread/src/auth.js":"11","/home/joshua/Desktop/whatdoyouwannaread/src/components/Landing.tsx":"12","/home/joshua/Desktop/whatdoyouwannaread/src/graphql/queries.js":"13","/home/joshua/Desktop/whatdoyouwannaread/src/components/MatchesBooks.js":"14","/home/joshua/Desktop/whatdoyouwannaread/src/components/MatchesFriends.js":"15","/home/joshua/Desktop/whatdoyouwannaread/src/components/LoadSmoothImg.js":"16","/home/joshua/Desktop/whatdoyouwannaread/src/components/MatchesChat.js":"17","/home/joshua/Desktop/whatdoyouwannaread/src/components/Motion.js":"18","/home/joshua/Desktop/whatdoyouwannaread/src/components/SkeletonCard.js":"19","/home/joshua/Desktop/whatdoyouwannaread/src/components/Modal.js":"20","/home/joshua/Desktop/whatdoyouwannaread/src/components/Animation.js":"21","/home/joshua/Desktop/whatdoyouwannaread/src/components/SkeletonBookMatch.js":"22"},{"size":786,"mtime":1611658022688,"results":"23","hashOfConfig":"24"},{"size":1073,"mtime":1614296085630,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611412473870,"results":"26","hashOfConfig":"24"},{"size":1244,"mtime":1612543766309,"results":"27","hashOfConfig":"24"},{"size":3082,"mtime":1614472795949,"results":"28","hashOfConfig":"24"},{"size":2686,"mtime":1614474376455,"results":"29","hashOfConfig":"24"},{"size":5220,"mtime":1614483122527,"results":"30","hashOfConfig":"24"},{"size":6133,"mtime":1614306048198,"results":"31","hashOfConfig":"24"},{"size":597,"mtime":1614300539612,"results":"32","hashOfConfig":"24"},{"size":90,"mtime":1612543710567,"results":"33","hashOfConfig":"24"},{"size":888,"mtime":1611657196066,"results":"34","hashOfConfig":"24"},{"size":1665,"mtime":1613519898334,"results":"35","hashOfConfig":"24"},{"size":3163,"mtime":1613774644758,"results":"36","hashOfConfig":"24"},{"size":3123,"mtime":1614495639389,"results":"37","hashOfConfig":"24"},{"size":3742,"mtime":1614469491069,"results":"38","hashOfConfig":"24"},{"size":570,"mtime":1612443980522,"results":"39","hashOfConfig":"24"},{"size":6445,"mtime":1614469574425,"results":"40","hashOfConfig":"24"},{"size":726,"mtime":1612868787225,"results":"41","hashOfConfig":"24"},{"size":326,"mtime":1614486812670,"results":"42","hashOfConfig":"24"},{"size":2392,"mtime":1612847563698,"results":"43","hashOfConfig":"24"},{"size":434,"mtime":1611577948681,"results":"44","hashOfConfig":"24"},{"size":5389,"mtime":1614495557537,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"vlkrcb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"/home/joshua/Desktop/whatdoyouwannaread/src/index.js",[],["99","100"],"/home/joshua/Desktop/whatdoyouwannaread/src/App.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/reportWebVitals.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/graphql/client.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/Navbar.js",["101"],"import React, {useState, useEffect, useContext} from 'react'\nimport {AuthContext} from '../contexts/authContext'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport {Link} from 'react-router-dom'\nimport {GiSpellBook} from 'react-icons/gi'\nimport {HiMenu} from 'react-icons/hi'\nimport './Navbar.scss'\nimport {useQuery} from '@apollo/client'\nimport {bookQuery} from '../graphql/queries'\n\nconst NavbarTitle = () => {\n\n    const {authState, setAuthState} = useContext(AuthContext)\n\n    useQuery(bookQuery)\n\n    useEffect(() => {\n        console.log(\"NAV AUTHSTATE\", authState)\n    }, [authState])\n\n    const logout = () => {\n        localStorage.removeItem('accessToken')\n        setAuthState(null)\n    }\n\n    return(\n        <Navbar className=\"justify-content-between navbar_main\" collapseOnSelect expand=\"sm\" variant=\"dark\">\n            <Navbar.Brand className=\"navbar_brand\" href=\"#home\">\n                <Link style={{color: \"white\", textDecoration: \"none\", display: \"flex\"}} to=\"/\">\n                <GiSpellBook style={{color: \"var(--amz_white)\", fontSize: \"50px\", marginRight: \"10px\"}}/>\n                <div style={{lineHeight: \"20px\", alignSelf: \"flex-end\"}}>\n                    WhatDoYou <br/>\n                    WannaRead\n                </div>\n                </Link>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" >\n                <HiMenu style={{color: \"var(--amz_white)\", fontSize: \"25px\"}}/>\n            </Navbar.Toggle>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto navbar_links\" >\n                { authState ?\n                    <>\n                      <Nav.Link href=\"#\" style={{alignSelf: \"flex-end\"}} >\n                        <Link style={{color: \"var(--amz_white)\", fontSize: \"20px\", textDecoration: \"none\"}} to=\"/startswiping\">\n                          Swipe!\n                        </Link>\n                      </Nav.Link>\n                      <Nav.Link style={{alignSelf: \"flex-end\"}} href=\"#\">\n                        <Link style={{color: \"var(--amz_white)\", fontSize: \"20px\", textDecoration: \"none\"}} to=\"/matches\">\n                          Matches\n                        </Link>\n                      </Nav.Link>\n                      <Nav.Link  style={{alignSelf: \"flex-end\"}} href=\"#\">\n                        <Link onClick={logout} style={{color: \"var(--amz_white)\", fontSize: \"20px\", textDecoration: \"none\"}} to=\"/\">\n                          Logout\n                        </Link>\n                      </Nav.Link>\n                    </>\n                  : \n                  <>\n                    <Nav.Link style={{alignSelf: \"flex-end\"}} href=\"#\">\n                      <Link style={{color: \"var(--amz_white)\", fontSize: \"20px\", textDecoration: \"none\"}} to=\"/Login\">\n                        Login\n                      </Link>\n                    </Nav.Link>\n                  </>\n                }\n            </Nav>  \n            </Navbar.Collapse>\n        </Navbar>\n    )\n\n\n}\n\nexport default NavbarTitle","/home/joshua/Desktop/whatdoyouwannaread/src/components/Matches.js",["102","103"],"import React, { useState } from 'react'\nimport { Button, ButtonGroup } from 'react-bootstrap'\nimport './Matches.scss'\nimport { bookQuery } from '../graphql/queries'\nimport { useQuery } from '@apollo/client'\nimport MatchesFriends from './MatchesFriends'\nimport MatchesBooks from './MatchesBooks'\nimport MatchesChat from './MatchesChat'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nconst Matches = () => {\n\n    const [matchState, setMatchState] = useState(\"Books\")\n    const handleStateBooks = () => setMatchState(\"Books\")\n    const handleStateFriends = () => setMatchState(\"Friends\")\n    const handleStateChat = () => setMatchState(\"Chat\")\n\n    //const { data } = useQuery(bookQuery)\n \n    //console.log(data)\n\nreturn(\n    <motion.div style={{\n        display: \"flex\", \n        flexDirection: \"column\", \n        width: \"100%\", \n        maxWidth: \"900px\", \n        height: \"100%\", \n        marginTop: \"50px\", \n        position: \"relative\"\n    }}\n    initial={{ x: \"125vw\" }}\n            animate={{ x: \"0\" }}\n            exit={{ x: \"-125vw\" }}\n            transition={{\n                type: \"spring\",\n                stiffness: 200,\n                damping: 20\n            }}\n    >\n    <AnimatePresence>\n    <motion.div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: \"100%\",\n                alignSelf: 'center'\n            }}\n            initial={{ x: \"125vw\" }}\n            animate={{ x: \"0\" }}\n            exit={{ x: \"-125vw\" }}\n            transition={{\n                type: \"spring\",\n                stiffness: 200,\n                damping: 20\n            }}\n        >\n        <ButtonGroup style={{ width: \"95%\", marginBottom: \"15px\", alignSelf: \"center\"}} >\n            <Button onClick={handleStateBooks} className=\"match_button\" variant=\"primary\" >Books</Button>\n            <Button onClick={handleStateFriends} className=\"match_button\" variant=\"primary\" >Friends</Button>\n            <Button onClick={handleStateChat} className=\"match_button\" variant=\"primary\" >Chat</Button>\n        </ButtonGroup>\n    </motion.div>\n    </AnimatePresence>\n    <div style={{width: \"100%\", height: \"100%\", position: \"relative\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n    <AnimatePresence>\n    {matchState === \"Friends\" && <MatchesFriends/>}\n    </AnimatePresence>\n    <AnimatePresence>\n    {matchState === \"Books\" && <MatchesBooks/>}\n    </AnimatePresence>\n    <AnimatePresence>\n    {matchState === \"Chat\" && <MatchesChat/>}\n    </AnimatePresence>\n    </div>\n    </motion.div>\n    )\n}\n\nexport default Matches","/home/joshua/Desktop/whatdoyouwannaread/src/components/SwipeDeck.js",["104","105","106","107","108"],"import React, {useEffect, useState} from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport TinderCard from 'react-tinder-card'\nimport './SwipeDeck.scss'\nimport {useQuery} from '@apollo/client'\nimport {bookQuery, bookSelectedMutation, selectBook, rejectBook, snoozeBook, getBookDeck} from '../graphql/queries'\nimport LoadSmoothImg from './LoadSmoothImg'\nimport Motion from './Motion'\nimport { Link } from 'react-router-dom'\nimport Modal from './Modal'\nimport SkeletonCard from './SkeletonCard'\n\nconst SwipeDeck = () => {\n\n    const [swipeCount, setSwipeCount] = useState(0)\n\n    const [bookDeets, setBookDeets] = useState({})\n    const [open, setOpen] = useState(false)\n    const handleClose = () => {\n      setOpen(false)\n      setBookDeets({})\n    }\n    const handleOpen = (bookInfo) => {\n      setOpen(true)\n      setBookDeets(bookInfo)\n    }\n\n    \n    \n\n    const { loading, error, data, refetch } = useQuery(bookQuery, {\n        fetchPolicy: \"no-cache\"\n    })\n    const bookList = data ? data.getBooks : []\n\n    const loadMoreBooks = () => {\n        setSwipeCount(0)\n        refetch()\n    }\n\n    useEffect(() => {\n        console.log(swipeCount)\n        console.log(bookList)\n        console.log(data)\n    }, [swipeCount])\n\n    const onSwipe = async(direction, bookInfo) => {\n        console.log('You swiped: ' + direction)\n        \n        switch(direction) {\n            case 'right':\n  ///////////////////////////////////////////////////////////////////\n              console.log(\"BOOKINFO\", bookInfo)\n                const stuffR = await selectBook(bookInfo._id)\n                console.log(stuffR[stuffR.length -1])\n                setSwipeCount(swipeCount => swipeCount + 1)\n  ///////////////////////////////////////////////////////////////////////\n              return\n            case 'left':\n  \n              const stuffL = await rejectBook(bookInfo._id)\n                console.log(stuffL[stuffL.length -1])\n                setSwipeCount(swipeCount => swipeCount + 1)\n  \n              return\n            case 'up':\n              \n              const stuffU = await snoozeBook(bookInfo._id)\n                console.log(stuffU[stuffU.length -1])\n              setSwipeCount(swipeCount => swipeCount + 1)\n\n              return\n            case 'down':\n  \n              //DownLogic\n              console.log(bookInfo)\n              handleOpen(bookInfo)\n              \n              return\n            default:\n              return 'foobar';\n          }\n\n\n\n\n        \n    }\n\n    const onCardLeftScreen = (myIdentifier) => {\n        console.log(myIdentifier + ' left the screen')\n    }\n\n    const bookCards = () => bookList.map(\n        (book, index) => {\n        \n        return (\n            <TinderCard \n              key={book.title}\n              className={`swipe ${index === 0 ? \"top-card\" : \"\"}`}  \n              \n              onSwipe={(dir) => onSwipe(dir, book)} \n              onCardLeftScreen={() => onCardLeftScreen(book.title)} \n              preventSwipe={['down']}\n            >\n              <div \n                style={{backgroundColor: \"var(--amz_black)\", overflow: \"hidden\"}} \n                className=\"tinder-card\"\n              >\n                <LoadSmoothImg src={book.book_image} alt={book.title} />\n              </div>\n\n            </TinderCard>\n        )}\n    )\n\n\n    return(\n        <>\n          <Modal open={open} handleClose={handleClose} bookDeets={bookDeets}/>\n            <Motion>\n            {loading && <SkeletonCard/> }   \n                { \n                \n                bookList.length === 10 ?\n\n                bookList.map(\n                    (book, index) => {\n                    \n                    return (\n                        <TinderCard \n                          key={book.title}\n                          className={`swipe ${index === 0 ? \"top-card\" : \"\"}`}  \n                          \n                          onSwipe={(dir) => onSwipe(dir, book)} \n                          onCardLeftScreen={() => onCardLeftScreen(book.title)} \n                          preventSwipe={['down']}\n                        >\n                          <div \n                            style={{backgroundColor: \"var(--amz_black)\", overflow: \"hidden\"}} \n                            className=\"tinder-card\"\n                          >\n                            <LoadSmoothImg src={book.book_image} alt={book.title} />\n                          </div>\n            \n                        </TinderCard>\n                    )})\n                \n                : \"\"\n                \n                \n                }\n            </Motion>\n\n            { swipeCount !== 10 ? \"\" :\n            <Motion>\n                <Alert onClick={loadMoreBooks} style={{backgroundColor: \"var(--amz_blue)\", color: \"var(--amz_white)\", cursor: \"pointer\", width: \"280px\"}}>\n                    Load More Books\n                </Alert>\n                <Link style={{textDecoration: \"none\", width: \"280px\"}} to=\"/matches\">\n                <Alert style={{backgroundColor: \"var(--amz_gray)\", color: \"var(--amz_orange)\"}}>\n                    Check Matches\n                </Alert>\n                </Link>\n            </Motion>\n            }\n        </>\n    )\n}\n\nexport default SwipeDeck","/home/joshua/Desktop/whatdoyouwannaread/src/components/Login.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/contexts/authContext.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/graphql/cache.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/auth.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/Landing.tsx",[],["109","110"],"/home/joshua/Desktop/whatdoyouwannaread/src/graphql/queries.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/MatchesBooks.js",["111","112","113","114","115","116"],"import React, {useEffect} from \"react\"\nimport Image from 'react-bootstrap/Image'\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport {motion} from 'framer-motion'\nimport {useQuery} from '@apollo/client'\nimport {getSelectedBooks} from '../graphql/queries'\nimport SkeletonBookMatch from './SkeletonBookMatch'\n\nconst pic2 =\"https://www.kindpng.com/picc/m/346-3463544_pokeball-drawing-free-download-pokemon-master-ball-png.png\"\n\nconst MatchesBooks = () => {\n\n    const { loading, error, data, refetch } = useQuery(getSelectedBooks, {\n        fetchPolicy: \"no-cache\",\n        variables: {userId: \"6008949669fca03ff4445f55\"}\n    })\n    const selectedBooks = data ? data.getSelectedBooks : []\n\n    useEffect(() => {\n        console.log(selectedBooks)\n        console.log(\"DATA\", data)\n    }, [selectedBooks])\n\n    return(\n      <motion.div\n      style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"95%\",\n          position: \"absolute\",\n          top: \"0\"\n        }}\n      initial={{ x: \"125vw\" }}\n      animate={{ x: \"0\" }}\n      exit={{ x: \"-125vw\" }}\n      transition={{\n          type: \"spring\",\n          stiffness: 200,\n          damping: 20\n      }}\n      >\n         <Accordion style={{minWidth: \"200px\", width: \"100%\", borderRadius: \"5px\"}} >\n         <Card style={{ minHeight: \"100px\", backgroundColor: \"var(--amz_gray\"}} >\n         {loading && <SkeletonBookMatch/>}\n         {selectedBooks ?\n            selectedBooks.slice(0,5).map((book, index) => {\n                return (\n                  <div key={book.title}>\n                    <Accordion.Toggle style={{display: \"flex\", alignItems: \"center\"}} as={Card.Header} eventKey={index.toString()}>\n                        <img src={book.book_image} style={{width: \"50px\", height: \"75px\", marginRight: \"20px\", border: \"0px\", borderRadius: \"5px\"}} />\n                          <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                            <div style={{fontSize: \"20px\"}}>\n                              {book.title}\n                            </div>\n                            <div style={{fontSize: \"16px\"}}>\n                              by: {book.author}\n                            </div>\n                          </div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body style={{display: \"flex\", alignItems:  \"center\"}}>\n                            <img src={pic2} style={{backgroundColor: \"red\", width: \"69px\", marginRight: \"20px\"}} rounded/>\n                            <div style={{fontSize: \"20px\"}}>heres some words</div>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                  </div>\n                )\n            })\n          :\n          <div style={{backgroundColor: \"pink\", width: \"500px\"}}>afbnaflibaglblgaebsga</div>\n        }\n        </Card>\n        </Accordion>\n      </motion.div>\n    )\n}\n\nexport default MatchesBooks","/home/joshua/Desktop/whatdoyouwannaread/src/components/MatchesFriends.js",["117","118","119","120","121"],"import React, {useEffect, useState} from \"react\"\nimport Image from 'react-bootstrap/Image'\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport {motion, AnimatePresence} from 'framer-motion'\nimport {useQuery} from '@apollo/client'\nimport {getUserFriends} from '../graphql/queries'\nimport './MatchesFriends.scss'\nimport SkeletonBookMatch from './SkeletonBookMatch'\n\nconst pic2 =\"https://www.kindpng.com/picc/m/346-3463544_pokeball-drawing-free-download-pokemon-master-ball-png.png\"\n\nconst MatchesFriends = () => {\n    const [imgStatus, setImgStatus] = useState({\n        loaded: {display: \"none\"},\n        loading: {},\n        test: \"shit\"\n    })\n\n    //friend.userIcon\n\n    const { loading, error, data, refetch } = useQuery(getUserFriends, {\n        fetchPolicy: \"no-cache\",\n        variables: {userId: \"6008949669fca03ff4445f55\"}\n    })\n    const userFriends = data ? data.getUserFriends : []\n\n    useEffect(() => {\n        console.log(\"LOADING\", loading)\n        console.log(\"USERFRIENDS\", userFriends)\n        console.log(\"IMGSTATUS\", imgStatus)\n    }, [userFriends, imgStatus, loading])\n\n    const imgLoadHandler = () => {\n        setImgStatus({\n            loaded: {},\n            loading: {display: \"none\"},\n            test: \"FUCK\"\n        })\n    }\n\n    return(\n        <motion.div\n        style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"95%\",\n            position: \"absolute\",\n            top: \"0\"\n        }}\n        initial={{ x: \"125vw\" }}\n        animate={{ x: \"0\" }}\n        exit={{ x: \"-125vw\" }}\n        transition={{\n            type: \"spring\",\n            stiffness: 200,\n            damping: 20\n        }}\n        >\n        \n        {/* <AnimatePresence>\n            {imgStatus.test !== \"FUCK\" && <SkeletonBookMatch /> } \n        </AnimatePresence> */}\n        \n         <Accordion style={{minWidth: \"200px\", width: \"100%\", borderRadius: \"5px\"}} >\n         <Card style={{ minHeight: \"100px\", backgroundColor: \"var(--amz_gray\"}} >\n        {loading && <SkeletonBookMatch/>}\n        { userFriends &&\n            userFriends.map((friend, index) => {\n                return (\n                  <div style={{marginBottom: \"-1px\"}} key={friend.userName}>\n                    <Accordion.Toggle style={{display: \"flex\", alignItems: \"center\"}} as={Card.Header} eventKey={index.toString()}>\n                        <img className=\"loaded\" onLoad={imgLoadHandler} src={friend.userIcon} style={imgStatus.loaded} />\n                        <div className=\"loading\" style={imgStatus.loading} />\n                          <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                            <div style={{fontSize: \"20px\"}}>\n                              {friend.userName}\n                            </div>\n                            <div style={{fontSize: \"16px\"}}>\n                              X books in common\n                            </div>\n                          </div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body style={{display: \"flex\", alignItems:  \"center\"}}>\n                            <Image src={pic2} style={{backgroundColor: \"red\", width: \"69px\", marginRight: \"20px\"}} rounded/>\n                            <div style={{fontSize: \"20px\"}}>These are the books!</div>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                  </div>\n                )\n            })\n        }\n        </Card>\n        </Accordion>\n\n        </motion.div>\n    )\n}\n\nexport default MatchesFriends","/home/joshua/Desktop/whatdoyouwannaread/src/components/LoadSmoothImg.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/MatchesChat.js",["122","123","124"],"import React, {useEffect, useRef, useState} from \"react\"\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport {motion} from 'framer-motion'\nimport {useQuery, useSubscription} from '@apollo/client'\nimport {getUserChannels, messageAddedSubscription} from '../graphql/queries'\nimport {IoSend} from 'react-icons/io5'\nimport './MatchesChat.scss'\nimport SkeletonBookMatch from './SkeletonBookMatch'\n\nconst MatchesChat = () => {\n    const [scrollClick, setScrollClick] = useState(0)\n\n    const ref1 = useRef(null)\n    const ref2 = useRef(null)\n\n    const handleScroll = () => {\n        setTimeout(() => {\n            setScrollClick(scrollClick + 1 )\n            console.log(scrollClick)\n        }\n            , 500)\n    }\n            \n\n    const { loading, error, data, refetch } = useQuery(getUserChannels, {\n        fetchPolicy: \"no-cache\",\n        //variables: {userId: \"6008949669fca03ff4445f55\"}\n    })\n    const userChannels = data ? data.getUserChannels : []\n    console.log(\"USERCHANNELS\", userChannels)\n\n    useSubscription(messageAddedSubscription, {\n        variables: {messageChannel: \"6028012478fe0822f30db15f\"},\n        onSubscriptionData: ({client, subscriptionData}) => {\n            console.log(subscriptionData)\n            refetch()\n        }\n      })\n\n      useSubscription(messageAddedSubscription, {\n        variables: {messageChannel: \"602e387d7654b432af9832f0\"},\n        onSubscriptionData: ({client, subscriptionData}) => {\n            console.log(subscriptionData)\n            refetch()\n        }\n      })\n\n      //const handleScroll = () => ref1.current.scrollIntoView()\n\n      useEffect(() => {\n        if(ref1.current) {\n            ref1.current.scrollTo(0, ref1.current.scrollHeight)\n        }\n      }, [userChannels, scrollClick])\n\n\n    const chats = userChannels.map((channel, index) => {\n        return(\n            <>\n            <Accordion.Toggle\n                onClick={handleScroll} \n                style={{display: \"flex\", alignItems: \"center\"}} \n                as={Card.Header} \n                eventKey={index.toString()}\n                >\n                <div className='bgAnimation' style={{ minWidth: \"50px\", width: \"50px\", height: \"75px\", marginRight: \"20px\", borderRadius: \"calc(0.25rem - 1px)\"}} />\n                    <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                        <div>\n                            {channel.channelName}\n                        </div>\n                        <div style={{display: \"flex\", fontSize: \"10px\"}}>\n                        {channel.channelMembers[0].userName}\n                        {channel.channelMembers[1].userName}\n                        </div>\n                    </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey={index.toString()}>\n                <Card.Body className='test' style={{display: \"flex\", \n                    flexDirection: \"column\", \n                    alignItems:  \"center\", \n                    height: \"400px\",\n                    maxHeight: \"400px\", \n                    }}>\n                    {\n                        channel.messageList.map((message, index) => {\n                            return(\n                                <div style={{\n                                    marginTop: \"3px\",\n                                    color: \"var(--amz_white)\", \n                                    alignSelf: message.messageFrom._id === \"6008949669fca03ff4445f55\" ? \"flex-start\" : \"flex-end\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    alignItems: message.messageFrom._id === \"6008949669fca03ff4445f55\" ? \"flex-start\" : \"flex-end\",\n                                    borderRadius: \"10px\"\n                                    }}>\n                                    {console.log(\"MESSAGE\", message)}\n                                    {console.log(\"MESSAGEFROM ID\", message.messageFrom._id)}\n                                    <div style={{fontSize: \"12px\"}}>\n                                        {message.messageFrom.userName}\n                                    </div>\n                                    <div style={{\n                                        fontSize: \"16px\", \n                                        margin: \"5px\",\n                                        color: \"var(--amz_black)\",\n                                        backgroundColor: \"var(--amz_white)\",\n                                        borderRadius: \"10px\",\n                                        padding: \"7px\",\n                                        margin: message.messageFrom._id === \"6008949669fca03ff4445f55\" ? \"0px 0px 0px 15px\" : \"0px 15px 0px 0px\",\n                                        }}>\n                                        {message.messageText}\n                                    </div>\n                                </div> \n                            )\n                        })\n                    }    \n\n                    <div style={{display: \"flex\", width: \"100%\", alignItems: \"center\"}}>\n                        <input className=\"mc-input\" type=\"text\" placeholder=\"Say something...\"/>\n                        <button className=\"input-button\"><IoSend className=\"input-button-icon\" /></button>\n                    </div>\n                    <div style={{ float:\"left\", clear: \"both\" }}\n                    ref={index === 0 ? ref1 : ref2}></div>\n                </Card.Body>\n            </Accordion.Collapse>\n            </>\n        )\n    })\n\n    return(\n        <motion.div\n        style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"95%\",\n            position: \"absolute\",\n            top: \"0\"\n        }}\n        initial={{ x: \"125vw\" }}\n        animate={{ x: \"0\" }}\n        exit={{ x: \"-125vw\" }}\n        transition={{\n            type: \"spring\",\n            stiffness: 200,\n            damping: 20\n        }}\n    >\n        <Accordion style={{minWidth: \"200px\", width: \"100%\", borderRadius: \"5px\"}} >\n            <Card style={{minHeight: \"100px\", backgroundColor: \"var(--amz_gray\"}} >\n                {loading && <SkeletonBookMatch/>}\n                {userChannels && chats}\n                \n            </Card>\n        </Accordion>\n        </motion.div>\n    )\n}\n\nexport default MatchesChat","/home/joshua/Desktop/whatdoyouwannaread/src/components/Motion.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/SkeletonCard.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/Modal.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/Animation.js",[],"/home/joshua/Desktop/whatdoyouwannaread/src/components/SkeletonBookMatch.js",["125","126"],"import React from 'react'\nimport Image from 'react-bootstrap/Image'\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport './SkeletonBookMatch.scss'\nimport {motion} from 'framer-motion'\n\nconst SkeletonBookMatch = ({display}) => {\n    \n  return(\n      <div style={{height: \"400px\", width: \"100%\"}}>\n        <Accordion style={{opacity: \"1\", position: \"absolute\", top: \"0\", minWidth: \"200px\", width: \"100%\", height: \"100%\", borderRadius: \"5px\"}}>\n        <Card style={{ backgroundColor: \"var(--amz_gray\"}}>\n        <Accordion.Toggle style={{display: \"flex\", alignItems: \"center\"}} as={Card.Header} eventKey=\"0\">\n            <div className='bgAnimation' style={{ minWidth: \"50px\", width: \"50px\", height: \"75px\", marginRight: \"20px\", borderRadius: \"calc(0.25rem - 1px)\"}} />\n              <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                <div style={{fontSize: \"20px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"300px\", height: \"20px\", margin: \"5px 0px 5px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n                <div style={{fontSize: \"16px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"150px\", height: \"16px\", margin: \"4px 0px 4px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n              </div>\n        </Accordion.Toggle>\n        <Accordion.Toggle style={{opacity: \".75\", display: \"flex\", alignItems: \"center\"}} as={Card.Header} eventKey=\"0\">\n            <div className='bgAnimation' style={{ minWidth: \"50px\", width: \"50px\", height: \"75px\", marginRight: \"20px\", borderRadius: \"calc(0.25rem - 1px)\"}} />\n              <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                <div style={{fontSize: \"20px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"300px\", height: \"20px\", margin: \"5px 0px 5px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n                <div style={{fontSize: \"16px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"150px\", height: \"16px\", margin: \"4px 0px 4px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n              </div>\n        </Accordion.Toggle>\n        <Accordion.Toggle style={{opacity: \".5\", display: \"flex\", alignItems: \"center\"}} as={Card.Header} eventKey=\"0\">\n            <div className='bgAnimation' style={{ minWidth: \"50px\", width: \"50px\", height: \"75px\", marginRight: \"20px\", borderRadius: \"calc(0.25rem - 1px)\"}} />\n              <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                <div style={{fontSize: \"20px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"300px\", height: \"20px\", margin: \"5px 0px 5px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n                <div style={{fontSize: \"16px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"150px\", height: \"16px\", margin: \"4px 0px 4px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n              </div>\n        </Accordion.Toggle>\n        <Accordion.Toggle style={{opacity: \".25\", display: \"flex\", alignItems: \"center\"}} as={Card.Header} eventKey=\"0\">\n            <div className='bgAnimation' style={{ minWidth: \"50px\", width: \"50px\", height: \"75px\", marginRight: \"20px\", borderRadius: \"calc(0.25rem - 1px)\"}} />\n              <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                <div style={{fontSize: \"20px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"300px\", height: \"20px\", margin: \"5px 0px 5px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n                <div style={{fontSize: \"16px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"150px\", height: \"16px\", margin: \"4px 0px 4px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n              </div>\n        </Accordion.Toggle>\n        <Accordion.Toggle style={{opacity: \".05\", display: \"flex\", alignItems: \"center\"}} as={Card.Header} eventKey=\"0\">\n            <div className='bgAnimation' style={{ minWidth: \"50px\", width: \"50px\", height: \"75px\", marginRight: \"20px\", borderRadius: \"calc(0.25rem - 1px)\"}} />\n              <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\n                <div style={{fontSize: \"20px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"300px\", height: \"20px\", margin: \"5px 0px 5px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n                <div style={{fontSize: \"16px\"}}>\n                  <div className='bgAnimation' style={{backgroundColor: \"var(--amz_white)\", width: \"150px\", height: \"16px\", margin: \"4px 0px 4px 0px\", borderRadius: \"calc(0.25rem - 1px)\"}}/>\n                </div>\n              </div>\n        </Accordion.Toggle>\n        </Card>\n        </Accordion>\n      </div>\n  )\n}\n\nexport default SkeletonBookMatch",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"135","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"131","severity":1,"message":"136","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":18},{"ruleId":"131","severity":1,"message":"137","line":6,"column":20,"nodeType":"133","messageId":"134","endLine":6,"endColumn":40},{"ruleId":"131","severity":1,"message":"138","line":6,"column":78,"nodeType":"133","messageId":"134","endLine":6,"endColumn":89},{"ruleId":"131","severity":1,"message":"139","line":31,"column":22,"nodeType":"133","messageId":"134","endLine":31,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":45,"column":8,"nodeType":"142","endLine":45,"endColumn":20,"suggestions":"143"},{"ruleId":"131","severity":1,"message":"144","line":94,"column":11,"nodeType":"133","messageId":"134","endLine":94,"endColumn":20},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"145","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"139","line":14,"column":22,"nodeType":"133","messageId":"134","endLine":14,"endColumn":27},{"ruleId":"131","severity":1,"message":"146","line":14,"column":35,"nodeType":"133","messageId":"134","endLine":14,"endColumn":42},{"ruleId":"140","severity":1,"message":"147","line":23,"column":8,"nodeType":"142","endLine":23,"endColumn":23,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":53,"column":25,"nodeType":"151","endLine":53,"endColumn":151},{"ruleId":"149","severity":1,"message":"150","line":65,"column":29,"nodeType":"151","endLine":65,"endColumn":123},{"ruleId":"131","severity":1,"message":"152","line":5,"column":17,"nodeType":"133","messageId":"134","endLine":5,"endColumn":32},{"ruleId":"131","severity":1,"message":"139","line":22,"column":22,"nodeType":"133","messageId":"134","endLine":22,"endColumn":27},{"ruleId":"131","severity":1,"message":"146","line":22,"column":35,"nodeType":"133","messageId":"134","endLine":22,"endColumn":42},{"ruleId":"140","severity":1,"message":"153","line":26,"column":11,"nodeType":"154","endLine":26,"endColumn":56},{"ruleId":"149","severity":1,"message":"150","line":75,"column":25,"nodeType":"151","endLine":75,"endColumn":122},{"ruleId":"131","severity":1,"message":"139","line":26,"column":22,"nodeType":"133","messageId":"134","endLine":26,"endColumn":27},{"ruleId":"140","severity":1,"message":"155","line":30,"column":11,"nodeType":"154","endLine":30,"endColumn":58},{"ruleId":"156","severity":1,"message":"157","line":109,"column":41,"nodeType":"158","messageId":"159","endLine":109,"endColumn":47},{"ruleId":"131","severity":1,"message":"145","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"160","line":6,"column":9,"nodeType":"133","messageId":"134","endLine":6,"endColumn":15},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'bookQuery' is defined but never used.","'useQuery' is defined but never used.","'bookSelectedMutation' is defined but never used.","'getBookDeck' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bookList' and 'data'. Either include them or remove the dependency array.","ArrayExpression",["163"],"'bookCards' is assigned a value but never used.","'Image' is defined but never used.","'refetch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["164"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AnimatePresence' is defined but never used.","The 'userFriends' conditional could make the dependencies of useEffect Hook (at line 32) change on every render. To fix this, wrap the initialization of 'userFriends' in its own useMemo() Hook.","VariableDeclarator","The 'userChannels' conditional could make the dependencies of useEffect Hook (at line 55) change on every render. To fix this, wrap the initialization of 'userChannels' in its own useMemo() Hook.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'motion' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [bookList, data, swipeCount]",{"range":"169","text":"170"},"Update the dependencies array to be: [data, selectedBooks]",{"range":"171","text":"172"},[1220,1232],"[bookList, data, swipeCount]",[830,845],"[data, selectedBooks]"]